import Head from 'next/head';
import Image from 'next/image';
import { Inter } from '@next/font/google';
import axios from 'axios';
import React, { useState, useEffect } from 'react';

interface PokemonImages {
  front_default: string;
}

interface PokemonTypes {
  type: {
    name: string;
    url: string;
  };
}

interface PokemonForm {
  pokemon: {
    name: string;
    url: string;
    location_area_encounters: string;
  };
  types: Array<PokemonTypes>;
  sprites: PokemonImages;
}

interface Response {
  data: PokemonForm;
}

export default function Home() {
  /* Learn TypeScript
   * understand react hooks - rules of hooks!!!!!
   * Rules: oonly inside react functiosn, called at top level, cannot be conditional.
   * use effect
   * async await
   * how to call APIs with query parameters
   *
   */

  const [data, setData] = useState<PokemonForm>();

  useEffect(() => {
    async function getUser() {
      try {
        const pokemon = await axios.get<PokemonForm>(
          'https://pokeapi.co/api/v2/pokemon-form/461',
        );
        if (!pokemon.data) {
          return;
        }
        setData(pokemon.data);
      } catch (error) {
        console.error(error);
      }
    }

    getUser();
  }, []); //empty array, for first render
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        {data && (
          <div>
            <div>Pokemon: {data.pokemon.name}</div>
            <div>the type is: {data.types[0].type.name}</div>
            <div>the url is {data.pokemon.url}</div>
            <div>
              <img
                src={data.sprites.front_default}
                alt="pokemon front profile"
              />
            </div>
          </div>
        )}
      </main>
    </>
  );
}
